<?php

/**
 * @file
 * Module file Sinister Web Service.
 */

/**
 * Implements hook_services_resources().
 *
 * Create service resource for APIs to return the necessary json data.
 */
function sinister_ws_services_resources() {
  $resources = array();

  // Service Apis for contents.
  $resources = array(
    'sinister-get-taxonomy' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve sinister taxonomy data.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_taxonomy.services',
          ),
          'callback' => 'sinister_ws_taxonomy_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-get-entity-reference' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve sinister entity referencedata.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_entity_reference.services',
          ),
          'callback' => 'sinister_ws_entity_reference_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-get-list-sinisters' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves list sinisters info.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_list_sinisters.services',
          ),
          'callback' => 'sinister_ws_list_sinisters_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'uid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-get-files' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves sinister files.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_files.services',
          ),
          'callback' => 'sinister_ws_files_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-get-driver' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve sinister driver data.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_driver.services',
          ),
          'callback' => 'sinister_ws_driver_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-get-thirds' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves thirds vehicles data.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_thirds.services',
          ),
          'callback' => 'sinister_ws_thirds_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-get-injuries' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve sinister injuries and damages data.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_injuries.services',
          ),
          'callback' => 'sinister_ws_injuries_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-get-term' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve sinister term data.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_term.services',
          ),
          'callback' => 'sinister_ws_term_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-get-map' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve sinister map location.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_map.services',
          ),
          'callback' => 'sinister_ws_map_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-get-list-historicals' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves list historicals info.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_list_historicals.services',
          ),
          'callback' => 'sinister_ws_list_historicals_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'uid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-get-historical' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve data from finished sinisters.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_historical.services',
          ),
          'callback' => 'sinister_ws_historical_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'get-legal-info' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves legal info.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_legal.services',
          ),
          'callback' => 'sinister_ws_legal_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-get-percent' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve the filling percent of sinister fields.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_get_percent.services',
          ),
          'callback' => 'sinister_ws_percent_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'sinister-clear-cache' => array(
      'operations' => array(
        'create' => array(
          'help' => 'Clear cache.',
          'callback' => 'sinister_ws_clear_cache',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
        ),
        'retrieve' => array(),
      ),
    ),
    'sinister-update-password' => array(
      'operations' => array(
        'create' => array(
          'help' => 'Change user password.',
          'callback' => 'sinister_ws_update_pass',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
        ),
        'retrieve' => array(),
      ),
    ),
    'sinister-post' => array(
      'operations' => array(
        'create' => array(
          'help' => 'Updates a sinister.',
          'callback' => 'sinister_ws_save_controller',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
        ),
        'retrieve' => array(),
        'delete' => array(),
      ),
    ),
  );
  return $resources;
}

include_once 'includes/sinister_ws.save.inc';
include_once 'includes/sinister_ws_update_password.services.inc';
include_once 'includes/sinister_ws_clear_cache.services.inc';

/**
 * Get sinister term object by id.
 */
function sinister_ws_get_term($id) {
  return db_fetch_object(db_query("SELECT * FROM {termino} WHERE id=:id", array(
    ':id' => $id,
  )));
}

/**
 * Writes a term to the database.
 */
function sinister_ws_write_term($note) {
  $primary_key = !empty($note->id) ? array('id') : NULL;
  drupal_write_record('note', $note, $primary_key);
}
