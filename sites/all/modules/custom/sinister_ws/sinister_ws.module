<?php

/**
 * @file
 * Module file Sinister Web Service.
 */

/**
 * Implements hook_services_resources().
 *
 * Create service resource for APIs to return the necessary json data.
 */
function sinister_ws_services_resources() {
  $resources = array();

  // Include the necessary inc files.
  module_load_include('inc', 'sinister_ws', 'includes/sinister_ws.services');

  // Service Apis for contents.
  $resources = array(
    'siniestros-activos' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves Sinister Info.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws.services',
          ),
          'callback' => 'sinister_ws_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'uid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'siniestros-terminados' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves Inactive Sinister Info.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_inactive.services',
          ),
          'callback' => 'sinister_ws_inactive_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'uid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'archivos' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves File Image URL.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_files.services',
          ),
          'callback' => 'sinister_ws_archivos_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'vehiculos-tercero' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves Third Vehicles Info.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_vehicles.services',
          ),
          'callback' => 'sinister_ws_vehicles_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'informacion-legal' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves Any Legal Info.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_legal.services',
          ),
          'callback' => 'sinister_ws_legal_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'datos-conductor' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve sinister vehicle data.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_conductor.services',
          ),
          'callback' => 'sinister_ws_conductor_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'lesiones-dano' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve sinister injured data.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_lesiones.services',
          ),
          'callback' => 'sinister_ws_lesiones_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'termino' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve sinister termino data.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_termino.services',
          ),
          'callback' => 'sinister_ws_termino_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'nid',
              'type' => 'int',
              'description' => 'Function to perform',
              'source' => array(
                'path' => '0',
              ),
              'optional' => TRUE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'actualizar-termino' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Update term data.',
          'file' => array(
            'type' => 'inc',
            'module' => 'sinister_ws',
            'name' => 'includes/sinister_ws_update_term.services',
          ),
          'callback' => 'sinister_ws_update_term_resource_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'data',
              'type' => 'struct',
              'description' => 'Function to perform',
              'source' => 'data',
              'optional' => FALSE,
              'default' => '0',
            ),
          ),
        ),
      ),
    ),
    'siniestro' => array(
      'update' => array(
        'help' => 'Updates a sinister',
        'file' => array(
          'file' => 'inc',
          'module' => 'sinister_ws',
          'name' => 'includes/sinister_ws.save.inc',
        ),
        'callback' => 'sinister_ws_save_controller',
        'access callback' => 'user_access',
        'access arguments' => array('Administrar Siniestros'),
        'access arguments append' => TRUE,
        'args' => array(
          array(
            'name' => 'nid',
            'type' => 'int',
            'description' => 'The id of the node to update',
            'source' => array('path' => '0'),
            'optional' => FALSE,
          ),
          array(
            'name' => 'data',
            'type' => 'struct',
            'description' => 'The sinister data object',
            'source' => 'data',
            'optional' => FALSE,
          ),
        ),
      ),
    ),
  );
  return $resources;
}

/**
 * Get sinister term object by id.
 */
function sinister_ws_get_term($id) {
  return db_fetch_object(db_query("SELECT * FROM {termino} WHERE id=:id", array(
    ':id' => $id,
  )));
}

/**
 * Writes a term to the database.
 */
function sinister_ws_write_term($note) {
  $primary_key = !empty($note->id) ? array('id') : NULL;
  drupal_write_record('note', $note, $primary_key);
}
